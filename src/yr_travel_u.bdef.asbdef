unmanaged implementation in class ybp_r_travel_u unique;
strict ( 2 );

define behavior for YR_TRAVEL_U alias Travel
//late numbering
lock master
authorization master ( instance )
etag master Lastchangedat
{

  field ( readonly ) TravelID, TotalPrice;
  field ( mandatory ) AgencyID, CustomerID, BeginDate, EndDate;

  create;
  update;
  delete;

  action ( features : instance ) set_status_booked result [1] $self;

  association _Booking { create ( features : instance ); }

   mapping for /dmo/travel control /dmo/s_travel_intx
  {
    AgencyID = agency_id;
    BeginDate = begin_date;
    BookingFee = booking_fee;
    CurrencyCode = currency_code;
    CustomerID = customer_id;
    EndDate = end_date;
    Status = status;
    TotalPrice = total_price;
    Description = description;
    TravelID = travel_id;
  }
}

define behavior for YI_Booking_U alias Booking
implementation in class ybp_i_booking_u unique
//late numbering
lock dependent by _Travel
authorization dependent by _Travel
//etag master <field_name>
etag dependent by _Travel
{

  field ( readonly ) TravelID, BookingID;
  field ( mandatory ) BookingDate, CustomerID, AirlineID, ConnectionID, FlightDate;

  update;
  delete;

  association _Travel;

   mapping for /dmo/booking control /dmo/s_booking_intx
  {
    BookingID = booking_id;
    AirlineID = carrier_id;
    BookingDate = booking_date;
    ConnectionID = connection_id;
    CurrencyCode = currency_code;
    CustomerID = customer_id;
    FlightDate = flight_date;
    FlightPrice = flight_price;
    TravelID = travel_id;
  }
}